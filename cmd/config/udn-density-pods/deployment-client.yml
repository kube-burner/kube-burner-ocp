kind: Deployment
apiVersion: apps/v1
metadata:
  name: client-{{.Replica}}
spec:
  replicas: {{.podReplicas}}
  selector:
    matchLabels:
      name: client-{{.Replica}}
  template:
    metadata:
      labels:
        name: client-{{.Replica}}
        app: client
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: client
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
              - key: node-role.kubernetes.io/infra
                operator: DoesNotExist
              - key: node-role.kubernetes.io/workload
                operator: DoesNotExist
      containers:
      - name: client-app
        image: quay.io/cloud-bulldozer/curl:latest
        command: ["sleep", "inf"]
        resources:
          requests:
            memory: "10Mi"
            cpu: "10m"
        env:
        - name: SERVICE_ENDPOINT
          value: "http://udn-density-{{randInt 1 6}}/256.html"
        imagePullPolicy: IfNotPresent
        {{ if eq .simple false }}
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "curl --fail -sS ${SERVICE_ENDPOINT} -o /dev/null"
        {{ end }}
        securityContext:
          privileged: false
        volumeMounts:
        - name: podinfo
          mountPath: /etc/podlabels
      volumes:
      - name: podinfo
        downwardAPI:
          items:
            - path: "labels"
              fieldRef:
                fieldPath: metadata.labels
      restartPolicy: Always
  strategy:
    type: RollingUpdate
