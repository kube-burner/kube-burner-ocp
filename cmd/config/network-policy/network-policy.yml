---
global:
  gc: true
  gcMetrics: false
  measurements:
{{ if eq .NETPOL_LATENCY "true" }}  
    - name: netpolLatency
      thresholds:
        - conditionType: Ready
          metric: P99
          threshold: {{.NETPOL_READY_THRESHOLD}}
{{ end }}        
metricsEndpoints:
{{ if .ES_SERVER }}
  - metrics: [{{.METRICS}}]
    alerts: [{{.ALERTS}}]
    indexer:
      esServers: ["{{.ES_SERVER}}"]
      insecureSkipVerify: true
      defaultIndex: {{.ES_INDEX}}
      type: opensearch
{{ end }}
{{ if eq .LOCAL_INDEXING "true" }}
  - metrics: [{{.METRICS}}]
    alerts: [{{.ALERTS}}]
    indexer:
      type: local
      metricsDirectory: collected-metrics-{{.UUID}}
{{ end }}

jobs:
  - name: network-policy-perf-pods
    namespace: network-policy-perf
    jobIterations: {{.JOB_ITERATIONS}}
    qps: {{.QPS}}
    burst: {{.BURST}}
    namespacedIterations: true
    podWait: false
    waitWhenFinished: true
    preLoadImages: false
    preLoadPeriod: 1s
    jobPause: 15s
    skipIndexing: true
    namespaceLabels:
      kube-burner.io/skip-networkpolicy-latency: true
      security.openshift.io/scc.podSecurityLabelSync: false
      pod-security.kubernetes.io/enforce: privileged
      pod-security.kubernetes.io/audit: privileged
      pod-security.kubernetes.io/warn: privileged
    objects:
      - objectTemplate: pod.yml
        replicas: {{.PODS_PER_NAMESPACE}}

      - objectTemplate: np-deny-all.yml
        replicas: 1

      - objectTemplate: np-allow-from-proxy.yml
        replicas: 1

  - name: network-policy-perf
    namespace: network-policy-perf
    jobIterations: {{.JOB_ITERATIONS}}
    qps: {{.QPS}}
    burst: {{.BURST}}
    namespacedIterations: true
    podWait: false
    waitWhenFinished: true
    preLoadImages: false
    preLoadPeriod: 15s
    jobPause: 1m
    cleanup: false
    namespaceLabels:
      security.openshift.io/scc.podSecurityLabelSync: false
      pod-security.kubernetes.io/enforce: privileged
      pod-security.kubernetes.io/audit: privileged
      pod-security.kubernetes.io/warn: privileged
    objects:
      - objectTemplate: ingress-np.yml
        replicas: {{.NETPOLS_PER_NAMESPACE}}
        inputVars:
          namespaces: {{.JOB_ITERATIONS}}
          pods_per_namespace: {{.PODS_PER_NAMESPACE}}
          netpols_per_namespace: {{.NETPOLS_PER_NAMESPACE}}
          local_pods: {{.LOCAL_PODS}}
          pod_selectors: {{.POD_SELECTORS}}
          single_ports: {{.SINGLE_PORTS}}
          port_ranges: {{.PORT_RANGES}}
          peer_namespaces: {{.REMOTE_NAMESPACES}}
          peer_pods: {{.REMOTE_PODS}}
          cidr_rules: {{.CIDRS}}
{{ if eq .NETPOL_LATENCY "false" }}
      - objectTemplate: egress-np.yml
        replicas: {{.NETPOLS_PER_NAMESPACE}}
        inputVars:
          namespaces: {{.JOB_ITERATIONS}}
          pods_per_namespace: {{.PODS_PER_NAMESPACE}}
          netpols_per_namespace: {{.NETPOLS_PER_NAMESPACE}}
          local_pods: {{.LOCAL_PODS}}
          pod_selectors: {{.POD_SELECTORS}}
          single_ports: {{.SINGLE_PORTS}}
          port_ranges: {{.PORT_RANGES}}
          peer_namespaces: {{.REMOTE_NAMESPACES}}
          peer_pods: {{.REMOTE_PODS}}
          cidr_rules: {{.CIDRS}}
{{ end }}
