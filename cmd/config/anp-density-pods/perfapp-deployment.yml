kind: Deployment
apiVersion: apps/v1
metadata:
  name: anp-app-{{.Iteration}}-{{.Replica}}
spec:
  template:
    metadata:
      labels:
        name: perfapp-{{.Iteration}}-{{.Replica}} 
        type: perfapp-{{.Iteration}}-{{.Replica}}
        trafficapp: perfapp
        tenant: {{.tenant}}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
              - key: node-role.kubernetes.io/infra
                operator: DoesNotExist
              - key: node-role.kubernetes.io/workload
                operator: DoesNotExist    
      containers:
      - name: perfapp
        image: quay.io/cloud-bulldozer/perfapp:latest
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          periodSeconds: 10
          failureThreshold: 1
          timeoutSeconds: 60
          initialDelaySeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          periodSeconds: 10
          failureThreshold: 1
          timeoutSeconds: 15
          initialDelaySeconds: 30
        resources:
          requests:
            memory: "10Mi"
            cpu: "10m"
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: POSTGRESQL_USER
          value: admin
        - name: POSTGRESQL_PASSWORD
          value: secret
        - name: POSTGRESQL_DATABASE
          value: node-density
        - name: POSTGRESQL_HOSTNAME
          value: postgres-{{.Iteration}}-{{.Replica}}
        - name: POSTGRESQL_PORT
          value: '5432'
        - name: POSTGRESQL_RETRY_INTERVAL
          value: '5'
        securityContext:
          privileged: false
      restartPolicy: Always
  replicas: {{.podReplicas}}
  selector:
    matchLabels:
      name: perfapp-{{.Iteration}}-{{.Replica}}
  strategy:
    type: RollingUpdate
